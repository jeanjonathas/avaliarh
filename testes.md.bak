# Redefinição das questões para todas as 60 perguntas, separadas pelos tópicos

# Raciocínio Lógico
questions_logical = [
    ("Se todos os cães são mamíferos e alguns mamíferos são aquáticos, podemos concluir que:", 
     ["a) Todos os cães são aquáticos", "b) Nenhum cão é aquático", "c) Alguns cães podem ser aquáticos", "d) Todos os mamíferos são cães"], "c"),
    ("Complete a sequência: 2, 6, 12, 20, ?", 
     ["a) 24", "b) 30", "c) 28", "d) 36"], "c"),
    ("Ana tem o dobro da idade de Bruno. Daqui a 5 anos, Ana terá 30 anos. Qual a idade de Bruno hoje?", 
     ["a) 15", "b) 10", "c) 20", "d) 12"], "b"),
    ("Se Maria é mais alta que João e João é mais alto que Carlos, então:", 
     ["a) Maria é mais baixa que Carlos", "b) João é mais alto que Maria", "c) Carlos é o mais baixo", "d) Nenhuma das alternativas"], "c"),
    ("Qual dos seguintes números não pertence à sequência? 3, 6, 9, 12, 14, 15, 18", 
     ["a) 12", "b) 14", "c) 15", "d) 18"], "b"),
    ("Se A → B e B → C, então:", 
     ["a) A sempre implica C", "b) C sempre implica A", "c) A e C não têm relação", "d) Nenhuma das alternativas"], "a"),
    ("Quantos quadrados há em um tabuleiro de xadrez 3x3?", 
     ["a) 9", "b) 14", "c) 15", "d) 13"], "c"),
    ("Se todos os cachorros latem e Rex é um cachorro, então:", 
     ["a) Rex não late", "b) Rex pode latir", "c) Rex late", "d) Nenhuma das alternativas"], "c"),
    ("Se 5x + 10 = 30, qual o valor de x?", 
     ["a) 2", "b) 4", "c) 5", "d) 6"], "b"),
    ("Se um número é múltiplo de 3 e de 4, ele também é múltiplo de:", 
     ["a) 6", "b) 9", "c) 12", "d) 8"], "c")
]

# Matemática Básica
questions_math = [
    ("Qual é o resultado de 25 + 37?", 
     ["a) 52", "b) 62", "c) 57", "d) 64"], "b"),
    ("Se um produto custa R$ 120 e está com 25% de desconto, qual o valor final?", 
     ["a) R$ 90", "b) R$ 95", "c) R$ 100", "d) R$ 85"], "a"),
    ("Se um cliente pagou R$ 200 por uma consulta e o troco foi R$ 50, quanto custou a consulta?", 
     ["a) R$ 200", "b) R$ 100", "c) R$ 150", "d) R$ 250"], "c"),
    ("Um veterinário atende 8 animais por dia. Quantos ele atende em uma semana (7 dias)?", 
     ["a) 56", "b) 64", "c) 48", "d) 72"], "a"),
    ("Se um medicamento deve ser administrado a cada 6 horas, quantas doses são dadas em um dia?", 
     ["a) 3", "b) 4", "c) 5", "d) 6"], "b")
]

# Compreensão Verbal
questions_verbal = [
    ("Qual das palavras abaixo é sinônimo de 'ágil'?", 
     ["a) Lento", "b) Rápido", "c) Pesado", "d) Difícil"], "b"),
    ("Qual é o antônimo de 'transparente'?", 
     ["a) Claro", "b) Lúcido", "c) Opaco", "d) Brilhante"], "c"),
    ("Qual opção apresenta um erro gramatical?", 
     ["a) Eu vou ao veterinário.", "b) O cachorro está brincando.", "c) Nós vai sair mais tarde.", "d) O gato dorme na cama."], "c")
]

# Aptidão Espacial
questions_spatial = [
    ("Se um cubo é rotacionado 90° para a direita, qual das opções representa sua nova posição?", 
     ["a) Igual", "b) Invertido", "c) Rotacionado", "d) Não muda"], "c")
]

# Raciocínio Abstrato
questions_abstract = [
    ("Se A → B e B → C, qual das afirmações é verdadeira?", 
     ["a) A sempre leva a C", "b) C leva a A", "c) A e C são independentes", "d) Nenhuma das alternativas"], "a")
]

# Tomada de Decisão
questions_decision = [
    ("Um cliente chega irritado porque o atendimento atrasou. O que você faz?", 
     ["a) Ignoro, pois não é minha culpa", "b) Explico a situação e tento resolver com cortesia", 
      "c) Peço para ele esperar mais", "d) Respondo de forma irritada também"], "b")
]

# Criando dicionário de seções
sections = {
    "Raciocínio Lógico": questions_logical,
    "Matemática Básica": questions_math,
    "Compreensão Verbal": questions_verbal,
    "Aptidão Espacial": questions_spatial,
    "Raciocínio Abstrato": questions_abstract,
    "Tomada de Decisão": questions_decision
}

# Criando o conteúdo do arquivo TXT
txt_content = ""

for section, questions in sections.items():
    txt_content += f"===== {section} =====\n\n"
    for index, (question, alternatives, correct_answer) in enumerate(questions):
        txt_content += f"{index+1}. {question}\n"
        for option in alternatives:
            txt_content += f"   {option}\n"
        txt_content += f"Resposta correta: {correct_answer}\n\n"
    txt_content += "\n"

# Salvando o conteúdo em um arquivo TXT
file_path = "/mnt/data/avaliacao_inteligencia_geral.txt"
with open(file_path, "w", encoding="utf-8") as file:
    file.write(txt_content)

# Fornecendo o arquivo para download
file_path


# Redefinição das questões para todas as 60 perguntas, separadas pelos tópicos

# Raciocínio Lógico
questions_logical = [
    ("Se todos os cães são mamíferos e alguns mamíferos são aquáticos, podemos concluir que:", 
     ["a) Todos os cães são aquáticos", "b) Nenhum cão é aquático", "c) Alguns cães podem ser aquáticos", "d) Todos os mamíferos são cães"], "c"),
    ("Complete a sequência: 2, 6, 12, 20, ?", 
     ["a) 24", "b) 30", "c) 28", "d) 36"], "c"),
    ("Ana tem o dobro da idade de Bruno. Daqui a 5 anos, Ana terá 30 anos. Qual a idade de Bruno hoje?", 
     ["a) 15", "b) 10", "c) 20", "d) 12"], "b"),
    ("Se Maria é mais alta que João e João é mais alto que Carlos, então:", 
     ["a) Maria é mais baixa que Carlos", "b) João é mais alto que Maria", "c) Carlos é o mais baixo", "d) Nenhuma das alternativas"], "c"),
    ("Qual dos seguintes números não pertence à sequência? 3, 6, 9, 12, 14, 15, 18", 
     ["a) 12", "b) 14", "c) 15", "d) 18"], "b"),
    ("Se A → B e B → C, então:", 
     ["a) A sempre implica C", "b) C sempre implica A", "c) A e C não têm relação", "d) Nenhuma das alternativas"], "a"),
    ("Quantos quadrados há em um tabuleiro de xadrez 3x3?", 
     ["a) 9", "b) 14", "c) 15", "d) 13"], "c"),
    ("Se todos os cachorros latem e Rex é um cachorro, então:", 
     ["a) Rex não late", "b) Rex pode latir", "c) Rex late", "d) Nenhuma das alternativas"], "c"),
    ("Se 5x + 10 = 30, qual o valor de x?", 
     ["a) 2", "b) 4", "c) 5", "d) 6"], "b"),
    ("Se um número é múltiplo de 3 e de 4, ele também é múltiplo de:", 
     ["a) 6", "b) 9", "c) 12", "d) 8"], "c")
]

# Matemática Básica
questions_math = [
    ("Qual é o resultado de 25 + 37?", 
     ["a) 52", "b) 62", "c) 57", "d) 64"], "b"),
    ("Se um produto custa R$ 120 e está com 25% de desconto, qual o valor final?", 
     ["a) R$ 90", "b) R$ 95", "c) R$ 100", "d) R$ 85"], "a"),
    ("Se um cliente pagou R$ 200 por uma consulta e o troco foi R$ 50, quanto custou a consulta?", 
     ["a) R$ 200", "b) R$ 100", "c) R$ 150", "d) R$ 250"], "c"),
    ("Um veterinário atende 8 animais por dia. Quantos ele atende em uma semana (7 dias)?", 
     ["a) 56", "b) 64", "c) 48", "d) 72"], "a"),
    ("Se um medicamento deve ser administrado a cada 6 horas, quantas doses são dadas em um dia?", 
     ["a) 3", "b) 4", "c) 5", "d) 6"], "b")
]

# Compreensão Verbal
questions_verbal = [
    ("Qual das palavras abaixo é sinônimo de 'ágil'?", 
     ["a) Lento", "b) Rápido", "c) Pesado", "d) Difícil"], "b"),
    ("Qual é o antônimo de 'transparente'?", 
     ["a) Claro", "b) Lúcido", "c) Opaco", "d) Brilhante"], "c"),
    ("Qual opção apresenta um erro gramatical?", 
     ["a) Eu vou ao veterinário.", "b) O cachorro está brincando.", "c) Nós vai sair mais tarde.", "d) O gato dorme na cama."], "c")
]

# Aptidão Espacial
questions_spatial = [
    ("Se um cubo é rotacionado 90° para a direita, qual das opções representa sua nova posição?", 
     ["a) Igual", "b) Invertido", "c) Rotacionado", "d) Não muda"], "c")
]

# Raciocínio Abstrato
questions_abstract = [
    ("Se A → B e B → C, qual das afirmações é verdadeira?", 
     ["a) A sempre leva a C", "b) C leva a A", "c) A e C são independentes", "d) Nenhuma das alternativas"], "a")
]

# Tomada de Decisão
questions_decision = [
    ("Um cliente chega irritado porque o atendimento atrasou. O que você faz?", 
     ["a) Ignoro, pois não é minha culpa", "b) Explico a situação e tento resolver com cortesia", 
      "c) Peço para ele esperar mais", "d) Respondo de forma irritada também"], "b")
]

# Criando dicionário de seções
sections = {
    "Raciocínio Lógico": questions_logical,
    "Matemática Básica": questions_math,
    "Compreensão Verbal": questions_verbal,
    "Aptidão Espacial": questions_spatial,
    "Raciocínio Abstrato": questions_abstract,
    "Tomada de Decisão": questions_decision
}

# Criando o conteúdo do arquivo TXT
txt_content = ""

for section, questions in sections.items():
    txt_content += f"===== {section} =====\n\n"
    for index, (question, alternatives, correct_answer) in enumerate(questions):
        txt_content += f"{index+1}. {question}\n"
        for option in alternatives:
            txt_content += f"   {option}\n"
        txt_content += f"Resposta correta: {correct_answer}\n\n"
    txt_content += "\n"

# Salvando o conteúdo em um arquivo TXT
file_path = "/mnt/data/avaliacao_inteligencia_geral.txt"
with open(file_path, "w", encoding="utf-8") as file:
    file.write(txt_content)

# Fornecendo o arquivo para download
file_path

# Criando o conteúdo do arquivo TXT apenas com as 10 questões da terceira etapa (Compreensão Verbal)

# Lista completa de questões de Compreensão Verbal
questions_verbal_full = [
    ("Qual das palavras abaixo é sinônimo de 'ágil'?", 
     ["a) Lento", "b) Rápido", "c) Pesado", "d) Difícil"], "b"),
    ("Qual é o antônimo de 'transparente'?", 
     ["a) Claro", "b) Lúcido", "c) Opaco", "d) Brilhante"], "c"),
    ("Qual opção apresenta um erro gramatical?", 
     ["a) Eu vou ao veterinário.", "b) O cachorro está brincando.", "c) Nós vai sair mais tarde.", "d) O gato dorme na cama."], "c"),
    ("Complete a frase corretamente: 'Os clientes _____ satisfeitos com o atendimento.'", 
     ["a) Está", "b) Estão", "c) Estarão", "d) Esteve"], "b"),
    ("Qual das palavras abaixo tem o mesmo significado de 'veterinário'?", 
     ["a) Médico de animais", "b) Enfermeiro", "c) Zoólogo", "d) Psicólogo"], "a"),
    ("Qual é a forma correta?", 
     ["a) Fazem dois anos que trabalho aqui.", "b) Faz dois anos que trabalho aqui.", 
      "c) Fazem dois anos que trabalhamos aqui.", "d) Faz dois anos que trabalhamos aqui."], "b"),
    ("Qual das frases a seguir está correta?", 
     ["a) Os cachorros latiam alto.", "b) Os cachorro latia alto.", 
      "c) O cães latia alto.", "d) O cachorro latiam alto."], "a"),
    ("Em qual alternativa todas as palavras estão corretamente escritas?", 
     ["a) Recepção, veterinário, agendamento", "b) Recepção, veterinario, agendamento", 
      "c) Recepsão, veterinário, ajendamento", "d) Recepção, veterínario, agendamento"], "a"),
    ("Qual é o significado da palavra 'empático'?", 
     ["a) Pessoa que sente e entende as emoções dos outros", "b) Pessoa distraída", 
      "c) Pessoa rude", "d) Pessoa insegura"], "a"),
    ("Qual das frases abaixo está escrita corretamente?", 
     ["a) Ele assistiu o filme.", "b) Ele assistiu ao filme.", 
      "c) Ele assistiu no filme.", "d) Ele assistiu de filme."], "b")
]

# Criando o conteúdo do arquivo TXT
txt_content_verbal = "===== Compreensão Verbal =====\n\n"

for index, (question, alternatives, correct_answer) in enumerate(questions_verbal_full):
    txt_content_verbal += f"{index+1}. {question}\n"
    for option in alternatives:
        txt_content_verbal += f"   {option}\n"
    txt_content_verbal += f"Resposta correta: {correct_answer}\n\n"

# Salvando o conteúdo em um arquivo TXT
file_path_verbal = "/mnt/data/avaliacao_compreensao_verbal.txt"
with open(file_path_verbal, "w", encoding="utf-8") as file:
    file.write(txt_content_verbal)

# Fornecendo o arquivo para download
file_path_verbal

# Criando o conteúdo do arquivo TXT apenas com as 10 questões da terceira etapa (Compreensão Verbal)

# Lista completa de questões de Compreensão Verbal
questions_verbal_full = [
    ("Qual das palavras abaixo é sinônimo de 'ágil'?", 
     ["a) Lento", "b) Rápido", "c) Pesado", "d) Difícil"], "b"),
    ("Qual é o antônimo de 'transparente'?", 
     ["a) Claro", "b) Lúcido", "c) Opaco", "d) Brilhante"], "c"),
    ("Qual opção apresenta um erro gramatical?", 
     ["a) Eu vou ao veterinário.", "b) O cachorro está brincando.", "c) Nós vai sair mais tarde.", "d) O gato dorme na cama."], "c"),
    ("Complete a frase corretamente: 'Os clientes _____ satisfeitos com o atendimento.'", 
     ["a) Está", "b) Estão", "c) Estarão", "d) Esteve"], "b"),
    ("Qual das palavras abaixo tem o mesmo significado de 'veterinário'?", 
     ["a) Médico de animais", "b) Enfermeiro", "c) Zoólogo", "d) Psicólogo"], "a"),
    ("Qual é a forma correta?", 
     ["a) Fazem dois anos que trabalho aqui.", "b) Faz dois anos que trabalho aqui.", 
      "c) Fazem dois anos que trabalhamos aqui.", "d) Faz dois anos que trabalhamos aqui."], "b"),
    ("Qual das frases a seguir está correta?", 
     ["a) Os cachorros latiam alto.", "b) Os cachorro latia alto.", 
      "c) O cães latia alto.", "d) O cachorro latiam alto."], "a"),
    ("Em qual alternativa todas as palavras estão corretamente escritas?", 
     ["a) Recepção, veterinário, agendamento", "b) Recepção, veterinario, agendamento", 
      "c) Recepsão, veterinário, ajendamento", "d) Recepção, veterínario, agendamento"], "a"),
    ("Qual é o significado da palavra 'empático'?", 
     ["a) Pessoa que sente e entende as emoções dos outros", "b) Pessoa distraída", 
      "c) Pessoa rude", "d) Pessoa insegura"], "a"),
    ("Qual das frases abaixo está escrita corretamente?", 
     ["a) Ele assistiu o filme.", "b) Ele assistiu ao filme.", 
      "c) Ele assistiu no filme.", "d) Ele assistiu de filme."], "b")
]

# Criando o conteúdo do arquivo TXT
txt_content_verbal = "===== Compreensão Verbal =====\n\n"

for index, (question, alternatives, correct_answer) in enumerate(questions_verbal_full):
    txt_content_verbal += f"{index+1}. {question}\n"
    for option in alternatives:
        txt_content_verbal += f"   {option}\n"
    txt_content_verbal += f"Resposta correta: {correct_answer}\n\n"

# Salvando o conteúdo em um arquivo TXT
file_path_verbal = "/mnt/data/avaliacao_compreensao_verbal.txt"
with open(file_path_verbal, "w", encoding="utf-8") as file:
    file.write(txt_content_verbal)

# Fornecendo o arquivo para download
file_path_verbal

# Criando o conteúdo do arquivo TXT apenas com as 10 questões da quarta etapa (Aptidão Espacial)

# Lista completa de questões de Aptidão Espacial
questions_spatial_full = [
    ("Se um cubo é rotacionado 90° para a direita, qual das opções representa sua nova posição?", 
     ["a) Igual", "b) Invertido", "c) Rotacionado", "d) Não muda"], "c"),
    ("Se uma folha de papel quadrada é dobrada ao meio duas vezes e depois um furo é feito no centro, quantos furos aparecem quando a folha é aberta?", 
     ["a) 1", "b) 2", "c) 4", "d) 8"], "c"),
    ("Qual figura pode ser formada ao desdobrar um cubo?", 
     ["a) Um retângulo", "b) Seis quadrados", "c) Três triângulos", "d) Dois círculos"], "b"),
    ("Se uma bola é vista de frente e de lado, sua forma permanece:", 
     ["a) Igual", "b) Diferente", "c) Oval", "d) Quadrada"], "a"),
    ("Se um objeto 3D tem 6 faces quadradas idênticas, ele é um:", 
     ["a) Prisma", "b) Pirâmide", "c) Cubo", "d) Cilindro"], "c"),
    ("Qual das formas seguintes não pode ser dobrada para formar um cubo?", 
     ["a) Seis quadrados", "b) Quatro quadrados e dois retângulos", "c) Dois triângulos e quatro quadrados", "d) Cinco quadrados"], "c"),
    ("Se um prédio é visto de cima, a forma que mais se aproxima de sua projeção é:", 
     ["a) Triângulo", "b) Círculo", "c) Quadrado", "d) Depende do formato do prédio"], "d"),
    ("Se você observar um cilindro de diferentes ângulos, ele pode parecer:", 
     ["a) Um círculo ou um retângulo", "b) Apenas um círculo", "c) Apenas um retângulo", "d) Um triângulo"], "a"),
    ("Se um cubo tem 8 vértices, quantas arestas ele possui?", 
     ["a) 12", "b) 8", "c) 6", "d) 10"], "a"),
    ("Se um objeto visto de frente parece um quadrado e de lado parece um triângulo, ele pode ser:", 
     ["a) Um cilindro", "b) Uma pirâmide", "c) Um cubo", "d) Um cone"], "b")
]

# Criando o conteúdo do arquivo TXT
txt_content_spatial = "===== Aptidão Espacial =====\n\n"

for index, (question, alternatives, correct_answer) in enumerate(questions_spatial_full):
    txt_content_spatial += f"{index+1}. {question}\n"
    for option in alternatives:
        txt_content_spatial += f"   {option}\n"
    txt_content_spatial += f"Resposta correta: {correct_answer}\n\n"

# Salvando o conteúdo em um arquivo TXT
file_path_spatial = "/mnt/data/avaliacao_aptidao_espacial.txt"
with open(file_path_spatial, "w", encoding="utf-8") as file:
    file.write(txt_content_spatial)

# Fornecendo o arquivo para download
file_path_spatial

# Criando o conteúdo do arquivo TXT apenas com as 10 questões da quarta etapa (Aptidão Espacial)

# Lista completa de questões de Aptidão Espacial
questions_spatial_full = [
    ("Se um cubo é rotacionado 90° para a direita, qual das opções representa sua nova posição?", 
     ["a) Igual", "b) Invertido", "c) Rotacionado", "d) Não muda"], "c"),
    ("Se uma folha de papel quadrada é dobrada ao meio duas vezes e depois um furo é feito no centro, quantos furos aparecem quando a folha é aberta?", 
     ["a) 1", "b) 2", "c) 4", "d) 8"], "c"),
    ("Qual figura pode ser formada ao desdobrar um cubo?", 
     ["a) Um retângulo", "b) Seis quadrados", "c) Três triângulos", "d) Dois círculos"], "b"),
    ("Se uma bola é vista de frente e de lado, sua forma permanece:", 
     ["a) Igual", "b) Diferente", "c) Oval", "d) Quadrada"], "a"),
    ("Se um objeto 3D tem 6 faces quadradas idênticas, ele é um:", 
     ["a) Prisma", "b) Pirâmide", "c) Cubo", "d) Cilindro"], "c"),
    ("Qual das formas seguintes não pode ser dobrada para formar um cubo?", 
     ["a) Seis quadrados", "b) Quatro quadrados e dois retângulos", "c) Dois triângulos e quatro quadrados", "d) Cinco quadrados"], "c"),
    ("Se um prédio é visto de cima, a forma que mais se aproxima de sua projeção é:", 
     ["a) Triângulo", "b) Círculo", "c) Quadrado", "d) Depende do formato do prédio"], "d"),
    ("Se você observar um cilindro de diferentes ângulos, ele pode parecer:", 
     ["a) Um círculo ou um retângulo", "b) Apenas um círculo", "c) Apenas um retângulo", "d) Um triângulo"], "a"),
    ("Se um cubo tem 8 vértices, quantas arestas ele possui?", 
     ["a) 12", "b) 8", "c) 6", "d) 10"], "a"),
    ("Se um objeto visto de frente parece um quadrado e de lado parece um triângulo, ele pode ser:", 
     ["a) Um cilindro", "b) Uma pirâmide", "c) Um cubo", "d) Um cone"], "b")
]

# Criando o conteúdo do arquivo TXT
txt_content_spatial = "===== Aptidão Espacial =====\n\n"

for index, (question, alternatives, correct_answer) in enumerate(questions_spatial_full):
    txt_content_spatial += f"{index+1}. {question}\n"
    for option in alternatives:
        txt_content_spatial += f"   {option}\n"
    txt_content_spatial += f"Resposta correta: {correct_answer}\n\n"

# Salvando o conteúdo em um arquivo TXT
file_path_spatial = "/mnt/data/avaliacao_aptidao_espacial.txt"
with open(file_path_spatial, "w", encoding="utf-8") as file:
    file.write(txt_content_spatial)

# Fornecendo o arquivo para download
file_path_spatial

# Criando o conteúdo do arquivo TXT apenas com as 10 questões da quinta etapa (Raciocínio Abstrato)

# Lista completa de questões de Raciocínio Abstrato
questions_abstract_full = [
    ("Se A → B e B → C, qual das afirmações é verdadeira?", 
     ["a) A sempre leva a C", "b) C leva a A", "c) A e C são independentes", "d) Nenhuma das alternativas"], "a"),
    ("Se uma sequência de formas segue um padrão de repetição ABCABCABC, qual será a próxima forma?", 
     ["a) A", "b) B", "c) C", "d) Nenhuma"], "a"),
    ("Qual das opções abaixo é um exemplo de analogia?", 
     ["a) Cão é para latido assim como gato é para miado", 
      "b) Azul é para verde assim como quadrado é para círculo", 
      "c) O sol é quente e a lua é grande", "d) Nenhuma das anteriores"], "a"),
    ("Se um objeto muda de forma, mas mantém seu volume, qual dessas características permaneceu inalterada?", 
     ["a) Cor", "b) Massa", "c) Tamanho", "d) Nenhuma"], "b"),
    ("Se 2 → 4, 3 → 9, 4 → 16, então 5 → ?", 
     ["a) 10", "b) 20", "c) 25", "d) 30"], "c"),
    ("Se um padrão de crescimento segue 3, 6, 12, 24, qual é o próximo número?", 
     ["a) 30", "b) 36", "c) 48", "d) 60"], "c"),
    ("Se todas as maçãs são frutas e algumas frutas são vermelhas, podemos concluir que:", 
     ["a) Todas as maçãs são vermelhas", "b) Nenhuma maçã é vermelha", "c) Algumas maçãs podem ser vermelhas", "d) Todas as frutas são maçãs"], "c"),
    ("Se um código segue a lógica: A = 1, B = 2, C = 3, então qual é a soma de D e E?", 
     ["a) 6", "b) 7", "c) 8", "d) 9"], "d"),
    ("Se um quadrado tem quatro lados, um pentágono tem cinco, quantos lados tem um octógono?", 
     ["a) 6", "b) 7", "c) 8", "d) 9"], "c"),
    ("Se um padrão de formas segue △, ◻, ⬟, △, ◻, ⬟, qual será a próxima forma?", 
     ["a) △", "b) ◻", "c) ⬟", "d) Nenhuma"], "a")
]

# Criando o conteúdo do arquivo TXT
txt_content_abstract = "===== Raciocínio Abstrato =====\n\n"

for index, (question, alternatives, correct_answer) in enumerate(questions_abstract_full):
    txt_content_abstract += f"{index+1}. {question}\n"
    for option in alternatives:
        txt_content_abstract += f"   {option}\n"
    txt_content_abstract += f"Resposta correta: {correct_answer}\n\n"

# Salvando o conteúdo em um arquivo TXT
file_path_abstract = "/mnt/data/avaliacao_raciocinio_abstrato.txt"
with open(file_path_abstract, "w", encoding="utf-8") as file:
    file.write(txt_content_abstract)

# Fornecendo o arquivo para download
file_path_abstract

# Criando o conteúdo do arquivo TXT apenas com as 10 questões da sexta etapa (Tomada de Decisão)

# Lista completa de questões de Tomada de Decisão
questions_decision_full = [
    ("Um cliente chega irritado porque o atendimento atrasou. O que você faz?", 
     ["a) Ignoro, pois não é minha culpa", 
      "b) Explico a situação e tento resolver com cortesia", 
      "c) Peço para ele esperar mais", 
      "d) Respondo de forma irritada também"], "b"),
    ("Um colega de trabalho comete um erro no cadastro de um cliente. O que você faz?", 
     ["a) Aponto o erro para todos", 
      "b) Corrijo discretamente e explico ao colega", 
      "c) Deixo o erro como está", 
      "d) Reclamo para o chefe"], "b"),
    ("Se houver dois clientes esperando ao mesmo tempo, qual deve ser sua atitude?", 
     ["a) Atender quem chegou primeiro", 
      "b) Atender quem parecer mais apressado", 
      "c) Ignorar um dos clientes", 
      "d) Atender quem for mais simpático"], "a"),
    ("Um cliente liga pedindo informações sobre uma consulta, mas você não sabe a resposta. O que fazer?", 
     ["a) Dizer que não sabe e desligar", 
      "b) Inventar uma resposta para não parecer desinformado", 
      "c) Informar que irá verificar e retornará com a resposta correta", 
      "d) Pedir para ele procurar a informação sozinho"], "c"),
    ("O telefone toca enquanto você está atendendo um cliente na recepção. Como agir?", 
     ["a) Ignoro o telefone", 
      "b) Peço licença ao cliente e atendo brevemente", 
      "c) Desligo o telefone", 
      "d) Peço ao cliente para esperar enquanto atendo a ligação longa"], "b"),
    ("Se um cliente traz um animal ferido e a clínica está cheia, o que fazer?", 
     ["a) Explicar a situação e tentar encaixar o atendimento urgente", 
      "b) Dizer que não pode atender", 
      "c) Mandar ele voltar outro dia", 
      "d) Ignorar a situação"], "a"),
    ("Um cliente quer marcar uma consulta, mas não há horários disponíveis. Como agir?", 
     ["a) Explico a falta de horários e ofereço a primeira vaga possível", 
      "b) Digo apenas que não há vagas e desligo", 
      "c) Peço para ele insistir outro dia", 
      "d) Marco sem permissão e tento encaixar depois"], "a"),
    ("Se um cliente confunde valores na hora do pagamento, você:", 
     ["a) Cobra o valor correto educadamente", 
      "b) Aproveita o erro para cobrar mais", 
      "c) Diz que não é sua responsabilidade", 
      "d) Ignora e deixa como está"], "a"),
    ("Se um colega de trabalho está sobrecarregado e você tem tempo livre, qual é a melhor atitude?", 
     ["a) Ignorar e continuar no seu ritmo", 
      "b) Perguntar se pode ajudar", 
      "c) Sair mais cedo do trabalho", 
      "d) Dizer que também está ocupado mesmo sem estar"], "b"),
    ("Um cliente elogia o atendimento na clínica. O que você faz?", 
     ["a) Agradece e repassa o elogio à equipe", 
      "b) Ignora", 
      "c) Diz que foi sorte", 
      "d) Fala que sempre deveria ser assim"], "a")
]

# Criando o conteúdo do arquivo TXT
txt_content_decision = "===== Tomada de Decisão =====\n\n"

for index, (question, alternatives, correct_answer) in enumerate(questions_decision_full):
    txt_content_decision += f"{index+1}. {question}\n"
    for option in alternatives:
        txt_content_decision += f"   {option}\n"
    txt_content_decision += f"Resposta correta: {correct_answer}\n\n"

# Salvando o conteúdo em um arquivo TXT
file_path_decision = "/mnt/data/avaliacao_tomada_decisao.txt"
with open(file_path_decision, "w", encoding="utf-8") as file:
    file.write(txt_content_decision)

# Fornecendo o arquivo para download
file_path_decision
